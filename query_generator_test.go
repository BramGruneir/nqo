package nqo

import (
	"reflect"
	"testing"
)

func TestGenerateJoins(t *testing.T) {
	expected := [][]table{{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {0, 1}, {0, 3}, {0, 5}, {1, 0}, {2, 4}, {2, 7}, {3, 0},
		{3, 4}, {3, 7}, {4, 2}, {4, 3}, {4, 7}, {5, 0}, {5, 6}, {6, 5}, {6, 7}, {7, 2}, {7, 3}, {7, 4}, {7, 6}, {0, 3, 4},
		{0, 3, 7}, {0, 5, 6}, {1, 0, 3}, {1, 0, 5}, {2, 4, 3}, {2, 4, 7}, {2, 7, 3}, {2, 7, 4}, {2, 7, 6}, {3, 0, 1},
		{3, 0, 5}, {3, 4, 2}, {3, 4, 7}, {3, 7, 2}, {3, 7, 4}, {3, 7, 6}, {4, 2, 7}, {4, 3, 0}, {4, 3, 7}, {4, 7, 2},
		{4, 7, 3}, {4, 7, 6}, {5, 0, 1}, {5, 0, 3}, {5, 6, 7}, {6, 5, 0}, {6, 7, 2}, {6, 7, 3}, {6, 7, 4}, {7, 2, 4},
		{7, 3, 0}, {7, 3, 4}, {7, 4, 2}, {7, 4, 3}, {7, 6, 5}, {0, 3, 4, 2}, {0, 3, 4, 7}, {0, 3, 7, 2}, {0, 3, 7, 4},
		{0, 3, 7, 6}, {0, 5, 6, 7}, {1, 0, 3, 4}, {1, 0, 3, 7}, {1, 0, 5, 6}, {2, 4, 3, 0}, {2, 4, 3, 7}, {2, 4, 7, 3},
		{2, 4, 7, 6}, {2, 7, 3, 0}, {2, 7, 3, 4}, {2, 7, 4, 3}, {2, 7, 6, 5}, {3, 0, 5, 6}, {3, 4, 2, 7}, {3, 4, 7, 2},
		{3, 4, 7, 6}, {3, 7, 2, 4}, {3, 7, 4, 2}, {3, 7, 6, 5}, {4, 2, 7, 3}, {4, 2, 7, 6}, {4, 3, 0, 1}, {4, 3, 0, 5},
		{4, 3, 7, 2}, {4, 3, 7, 6}, {4, 7, 3, 0}, {4, 7, 6, 5}, {5, 0, 3, 4}, {5, 0, 3, 7}, {5, 6, 7, 2}, {5, 6, 7, 3},
		{5, 6, 7, 4}, {6, 5, 0, 1}, {6, 5, 0, 3}, {6, 7, 2, 4}, {6, 7, 3, 0}, {6, 7, 3, 4}, {6, 7, 4, 2}, {6, 7, 4, 3},
		{7, 2, 4, 3}, {7, 3, 0, 1}, {7, 3, 0, 5}, {7, 3, 4, 2}, {7, 4, 3, 0}, {7, 6, 5, 0}, {0, 3, 4, 2, 7}, {0, 3, 4, 7, 2},
		{0, 3, 4, 7, 6}, {0, 3, 7, 2, 4}, {0, 3, 7, 4, 2}, {0, 3, 7, 6, 5}, {0, 5, 6, 7, 2}, {0, 5, 6, 7, 3}, {0, 5, 6, 7, 4},
		{1, 0, 3, 4, 2}, {1, 0, 3, 4, 7}, {1, 0, 3, 7, 2}, {1, 0, 3, 7, 4}, {1, 0, 3, 7, 6}, {1, 0, 5, 6, 7}, {2, 4, 3, 0, 1},
		{2, 4, 3, 0, 5}, {2, 4, 3, 7, 6}, {2, 4, 7, 3, 0}, {2, 4, 7, 6, 5}, {2, 7, 3, 0, 1}, {2, 7, 3, 0, 5}, {2, 7, 4, 3, 0},
		{2, 7, 6, 5, 0}, {3, 0, 5, 6, 7}, {3, 4, 2, 7, 6}, {3, 4, 7, 6, 5}, {3, 7, 6, 5, 0}, {4, 2, 7, 3, 0}, {4, 2, 7, 6, 5},
		{4, 3, 0, 5, 6}, {4, 3, 7, 6, 5}, {4, 7, 3, 0, 1}, {4, 7, 3, 0, 5}, {4, 7, 6, 5, 0}, {5, 0, 3, 4, 2}, {5, 0, 3, 4, 7},
		{5, 0, 3, 7, 2}, {5, 0, 3, 7, 4}, {5, 0, 3, 7, 6}, {5, 6, 7, 2, 4}, {5, 6, 7, 3, 0}, {5, 6, 7, 3, 4}, {5, 6, 7, 4, 2},
		{5, 6, 7, 4, 3}, {6, 5, 0, 3, 4}, {6, 5, 0, 3, 7}, {6, 7, 2, 4, 3}, {6, 7, 3, 0, 1}, {6, 7, 3, 0, 5}, {6, 7, 3, 4, 2},
		{6, 7, 4, 3, 0}, {7, 2, 4, 3, 0}, {7, 3, 0, 5, 6}, {7, 4, 3, 0, 1}, {7, 4, 3, 0, 5}, {7, 6, 5, 0, 1}, {7, 6, 5, 0, 3},
		{0, 3, 4, 2, 7, 6}, {0, 3, 4, 7, 6, 5}, {0, 5, 6, 7, 2, 4}, {0, 5, 6, 7, 3, 4}, {0, 5, 6, 7, 4, 2}, {0, 5, 6, 7, 4, 3},
		{1, 0, 3, 4, 2, 7}, {1, 0, 3, 4, 7, 2}, {1, 0, 3, 4, 7, 6}, {1, 0, 3, 7, 2, 4}, {1, 0, 3, 7, 4, 2}, {1, 0, 3, 7, 6, 5},
		{1, 0, 5, 6, 7, 2}, {1, 0, 5, 6, 7, 3}, {1, 0, 5, 6, 7, 4}, {2, 4, 3, 0, 5, 6}, {2, 4, 3, 7, 6, 5}, {2, 4, 7, 3, 0, 1},
		{2, 4, 7, 3, 0, 5}, {2, 4, 7, 6, 5, 0}, {2, 7, 3, 0, 5, 6}, {2, 7, 4, 3, 0, 1}, {2, 7, 4, 3, 0, 5}, {2, 7, 6, 5, 0, 1},
		{2, 7, 6, 5, 0, 3}, {3, 0, 5, 6, 7, 2}, {3, 0, 5, 6, 7, 4}, {3, 4, 2, 7, 6, 5}, {3, 4, 7, 6, 5, 0}, {3, 7, 6, 5, 0, 1},
		{4, 2, 7, 3, 0, 1}, {4, 2, 7, 3, 0, 5}, {4, 2, 7, 6, 5, 0}, {4, 3, 0, 5, 6, 7}, {4, 3, 7, 6, 5, 0}, {4, 7, 3, 0, 5, 6},
		{4, 7, 6, 5, 0, 1}, {4, 7, 6, 5, 0, 3}, {5, 0, 3, 4, 2, 7}, {5, 0, 3, 4, 7, 2}, {5, 0, 3, 4, 7, 6}, {5, 0, 3, 7, 2, 4},
		{5, 0, 3, 7, 4, 2}, {5, 6, 7, 2, 4, 3}, {5, 6, 7, 3, 0, 1}, {5, 6, 7, 3, 4, 2}, {5, 6, 7, 4, 3, 0}, {6, 5, 0, 3, 4, 2},
		{6, 5, 0, 3, 4, 7}, {6, 5, 0, 3, 7, 2}, {6, 5, 0, 3, 7, 4}, {6, 7, 2, 4, 3, 0}, {6, 7, 4, 3, 0, 1}, {6, 7, 4, 3, 0, 5},
		{7, 2, 4, 3, 0, 1}, {7, 2, 4, 3, 0, 5}, {7, 4, 3, 0, 5, 6}, {7, 6, 5, 0, 3, 4}, {0, 3, 4, 2, 7, 6, 5}, {0, 5, 6, 7, 2, 4, 3},
		{0, 5, 6, 7, 3, 4, 2}, {1, 0, 3, 4, 2, 7, 6}, {1, 0, 3, 4, 7, 6, 5}, {1, 0, 5, 6, 7, 2, 4}, {1, 0, 5, 6, 7, 3, 4},
		{1, 0, 5, 6, 7, 4, 2}, {1, 0, 5, 6, 7, 4, 3}, {2, 4, 3, 0, 5, 6, 7}, {2, 4, 3, 7, 6, 5, 0}, {2, 4, 7, 3, 0, 5, 6},
		{2, 4, 7, 6, 5, 0, 1}, {2, 4, 7, 6, 5, 0, 3}, {2, 7, 4, 3, 0, 5, 6}, {2, 7, 6, 5, 0, 3, 4}, {3, 0, 5, 6, 7, 2, 4},
		{3, 0, 5, 6, 7, 4, 2}, {3, 4, 2, 7, 6, 5, 0}, {3, 4, 7, 6, 5, 0, 1}, {4, 2, 7, 3, 0, 5, 6}, {4, 2, 7, 6, 5, 0, 1},
		{4, 2, 7, 6, 5, 0, 3}, {4, 3, 0, 5, 6, 7, 2}, {4, 3, 7, 6, 5, 0, 1}, {5, 0, 3, 4, 2, 7, 6}, {5, 6, 7, 2, 4, 3, 0},
		{5, 6, 7, 4, 3, 0, 1}, {6, 5, 0, 3, 4, 2, 7}, {6, 5, 0, 3, 4, 7, 2}, {6, 5, 0, 3, 7, 2, 4}, {6, 5, 0, 3, 7, 4, 2},
		{6, 7, 2, 4, 3, 0, 1}, {6, 7, 2, 4, 3, 0, 5}, {7, 2, 4, 3, 0, 5, 6}, {7, 6, 5, 0, 3, 4, 2}, {1, 0, 3, 4, 2, 7, 6, 5},
		{1, 0, 5, 6, 7, 2, 4, 3}, {1, 0, 5, 6, 7, 3, 4, 2}, {2, 4, 3, 7, 6, 5, 0, 1}, {3, 4, 2, 7, 6, 5, 0, 1}, {5, 6, 7, 2, 4, 3, 0, 1}}
	actual := GenerateJoins(8)
	if !reflect.DeepEqual(actual, expected) {
		t.Fatalf("expected joins: %s\nbut found: %s", expected, actual)
	}
}

func TestGenerateQueries(t *testing.T) {
	expected := []string{
		"SELECT * FROM nation",
		"SELECT * FROM region",
		"SELECT * FROM part",
		"SELECT * FROM supplier",
		"SELECT * FROM partsupp",
		"SELECT * FROM customer",
		"SELECT * FROM orders",
		"SELECT * FROM lineitem",
		"SELECT * FROM nation JOIN region ON r_regionkey = n_regionkey",
		"SELECT * FROM nation JOIN supplier ON n_nationkey = s_nationkey",
		"SELECT * FROM nation JOIN customer ON n_nationkey = c_nationkey",
		"SELECT * FROM region JOIN nation ON r_regionkey = n_regionkey",
		"SELECT * FROM part JOIN partsupp ON p_partkey = ps_partkey",
		"SELECT * FROM part JOIN lineitem ON p_partkey = l_partkey",
		"SELECT * FROM supplier JOIN nation ON n_nationkey = s_nationkey",
		"SELECT * FROM supplier JOIN partsupp ON s_suppkey = ps_suppkey",
		"SELECT * FROM supplier JOIN lineitem ON s_suppkey = l_suppkey",
		"SELECT * FROM partsupp JOIN part ON p_partkey = ps_partkey",
		"SELECT * FROM partsupp JOIN supplier ON s_suppkey = ps_suppkey",
		"SELECT * FROM partsupp JOIN lineitem ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM customer JOIN nation ON n_nationkey = c_nationkey",
		"SELECT * FROM customer JOIN orders ON c_custkey = o_custkey",
		"SELECT * FROM orders JOIN customer ON c_custkey = o_custkey",
		"SELECT * FROM orders JOIN lineitem ON o_orderkey = l_orderkey",
		"SELECT * FROM lineitem JOIN part ON p_partkey = l_partkey",
		"SELECT * FROM lineitem JOIN supplier ON s_suppkey = l_suppkey",
		"SELECT * FROM lineitem JOIN partsupp ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM lineitem JOIN orders ON o_orderkey = l_orderkey",
		"SELECT * FROM nation JOIN supplier ON n_nationkey = s_nationkey JOIN partsupp ON s_suppkey = ps_suppkey",
		"SELECT * FROM nation JOIN supplier ON n_nationkey = s_nationkey JOIN lineitem ON s_suppkey = l_suppkey",
		"SELECT * FROM nation JOIN customer ON n_nationkey = c_nationkey JOIN orders ON c_custkey = o_custkey",
		"SELECT * FROM region JOIN nation ON r_regionkey = n_regionkey JOIN supplier ON n_nationkey = s_nationkey",
		"SELECT * FROM region JOIN nation ON r_regionkey = n_regionkey JOIN customer ON n_nationkey = c_nationkey",
		"SELECT * FROM part JOIN partsupp ON p_partkey = ps_partkey JOIN supplier ON s_suppkey = ps_suppkey",
		"SELECT * FROM part JOIN partsupp ON p_partkey = ps_partkey JOIN lineitem ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM part JOIN lineitem ON p_partkey = l_partkey JOIN supplier ON s_suppkey = l_suppkey",
		"SELECT * FROM part JOIN lineitem ON p_partkey = l_partkey JOIN partsupp ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM part JOIN lineitem ON p_partkey = l_partkey JOIN orders ON o_orderkey = l_orderkey",
		"SELECT * FROM supplier JOIN nation ON n_nationkey = s_nationkey JOIN region ON r_regionkey = n_regionkey",
		"SELECT * FROM supplier JOIN nation ON n_nationkey = s_nationkey JOIN customer ON n_nationkey = c_nationkey",
		"SELECT * FROM supplier JOIN partsupp ON s_suppkey = ps_suppkey JOIN part ON p_partkey = ps_partkey",
		"SELECT * FROM supplier JOIN partsupp ON s_suppkey = ps_suppkey JOIN lineitem ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM supplier JOIN lineitem ON s_suppkey = l_suppkey JOIN part ON p_partkey = l_partkey",
		"SELECT * FROM supplier JOIN lineitem ON s_suppkey = l_suppkey JOIN partsupp ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM supplier JOIN lineitem ON s_suppkey = l_suppkey JOIN orders ON o_orderkey = l_orderkey",
		"SELECT * FROM partsupp JOIN part ON p_partkey = ps_partkey JOIN lineitem ON p_partkey = l_partkey",
		"SELECT * FROM partsupp JOIN supplier ON s_suppkey = ps_suppkey JOIN nation ON n_nationkey = s_nationkey",
		"SELECT * FROM partsupp JOIN supplier ON s_suppkey = ps_suppkey JOIN lineitem ON s_suppkey = l_suppkey",
		"SELECT * FROM partsupp JOIN lineitem ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey JOIN part ON p_partkey = l_partkey",
		"SELECT * FROM partsupp JOIN lineitem ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey JOIN supplier ON s_suppkey = l_suppkey",
		"SELECT * FROM partsupp JOIN lineitem ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey JOIN orders ON o_orderkey = l_orderkey",
		"SELECT * FROM customer JOIN nation ON n_nationkey = c_nationkey JOIN region ON r_regionkey = n_regionkey",
		"SELECT * FROM customer JOIN nation ON n_nationkey = c_nationkey JOIN supplier ON n_nationkey = s_nationkey",
		"SELECT * FROM customer JOIN orders ON c_custkey = o_custkey JOIN lineitem ON o_orderkey = l_orderkey",
		"SELECT * FROM orders JOIN customer ON c_custkey = o_custkey JOIN nation ON n_nationkey = c_nationkey",
		"SELECT * FROM orders JOIN lineitem ON o_orderkey = l_orderkey JOIN part ON p_partkey = l_partkey",
		"SELECT * FROM orders JOIN lineitem ON o_orderkey = l_orderkey JOIN supplier ON s_suppkey = l_suppkey",
		"SELECT * FROM orders JOIN lineitem ON o_orderkey = l_orderkey JOIN partsupp ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey",
		"SELECT * FROM lineitem JOIN part ON p_partkey = l_partkey JOIN partsupp ON p_partkey = ps_partkey",
		"SELECT * FROM lineitem JOIN supplier ON s_suppkey = l_suppkey JOIN nation ON n_nationkey = s_nationkey",
		"SELECT * FROM lineitem JOIN supplier ON s_suppkey = l_suppkey JOIN partsupp ON s_suppkey = ps_suppkey",
		"SELECT * FROM lineitem JOIN partsupp ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey JOIN part ON p_partkey = ps_partkey",
		"SELECT * FROM lineitem JOIN partsupp ON ps_partkey = l_partkey AND l_suppkey = ps_suppkey JOIN supplier ON s_suppkey = ps_suppkey",
		"SELECT * FROM lineitem JOIN orders ON o_orderkey = l_orderkey JOIN customer ON c_custkey = o_custkey",
	}
	actual := GenerateQueries(3)
	if !reflect.DeepEqual(actual, expected) {
		t.Fatalf("expected queries: %s\nbut found: %s", expected, actual)
	}
}
